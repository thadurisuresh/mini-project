@model test.Models.Customer

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
@if (Session["UserName"] == null)
{
    <script type="text/javascript">

        window.onload = window.history.forward(0);  //calling function on window on-load

    </script>
    <head runat="server">
        <script type="text/javascript">

            windowwindow.onload = window.history.forward(0);

        </script>

        <title></title>
    </head>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="alert-danger">
        @Html.ValidationSummary(true, " ")
    </div>
    <div class="container" style="color:black">
        <div class="row">
            <div class="col-md-7 col-md-offset-3">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="text-center">
                            <div class="form-horizontal">
                               
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @*<div class="form-group">
                                    @Html.LabelFor(model => model.CustomerID, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-7">
                                        @Html.EditorFor(model => model.CustomerID, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-7">
                                        @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-7">
                                        @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-7">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-7">
                                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-7">
                                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-7">
                                        @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Create" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
